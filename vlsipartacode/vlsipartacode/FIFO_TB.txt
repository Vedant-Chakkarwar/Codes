
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
use ieee.std_logic_arith.all;

ENTITY fifo_tb IS
END fifo_tb;
 
ARCHITECTURE behavior OF fifo_tb IS 
	signal clk,reset,enr,enw,empty,full : std_logic := '0';
	signal data_in, data_out:std_logic_vector(7 downto 0):=(others => '0');
	signal i:integer :=0;
	constant clk_period : time := 10ns;
	constant depth :integer := 16;
 
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: entity work.fifo generic map(depth => depth) port map(clk,reset,enr,enw,data_in,data_out,empty,full);

   -- Clock process definitions
   clk_process :process
   begin
		clk <= '0';
		wait for clk_period/2;
		clk <= '1';
		wait for clk_period/2;
   end process;
 

   -- Stimulus process
   stim_proc: process
   begin		
      reset<= '1';
		wait for clk_period;
		reset<= '0';
		wait for clk_period*3;
		enw <='1';
		enr<='0';
		for i in 1 to 10 loop
			data_in <= conv_std_logic_vector(i,8);
			wait for clk_period;
		end loop;
		enw <= '0';
		enr <= '1';
		wait for clk_period*4;
		enw<= '0';
		enr <= '0';
		wait for clk_period*10;
		enw <='1';
		enr <= '0';
		for i in 11 to 20 loop
			Data_in <= conv_std_logic_vector(i,8);
			wait for clk_period;
		end loop;
		enw <= '0';
		enr <= '0';
		wait for clk_period*10;
		enw <= '0';
		enr <= '1';
		wait for clk_period*4;
		enw <= '0';
		enr <= '0';
		wait for clk_period;
		enw <= '0';
		enr <= '1';
		wait for clk_period*8;
		enw <= '0';
		enr <= '0';
		wait for clk_period;
		enw <= '0';
		enr <= '1';
		wait for clk_period*4;
		enw <= '0';
		enr <= '0';
		wait for clk_period;
		enw <= '0';
		enr <= '1';
		wait for clk_period*8;
		enw <= '0';
		enr <= '0';		
		wait;
   end process;

END;
